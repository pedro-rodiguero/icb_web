name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  GAR_LOCATION: 'us-central1'
  GKE_CLUSTER: 'icb-web-deploy'
  GKE_ZONE: 'southamerica-east1'
  DEPLOYMENT_NAME: 'icb-web-deployment'
  REPOSITORY: 'icb_web'
  IMAGE: 'gcr.io/$PROJECT_ID/icb_web:latest'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/772107785669/locations/global/workloadIdentityPools/icb-web-pool/providers/my-provider'
  REACT_APP_YOUTUBE_API_KEY: ${{ secrets.REACT_APP_YOUTUBE_API_KEY }}
  REACT_APP_YOUTUBE_CHANNEL_ID: ${{ secrets.REACT_APP_YOUTUBE_CHANNEL_ID }}

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Configure Docker for Google Artifact Registry'
        run: |
          echo "${{ secrets.GCP_CREDENTIALS }}" > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo $ACCESS_TOKEN | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev

      - name: 'Build Docker Image'
        run: |
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: 'Deploy to GKE'
        run: |
          kubectl config set-cluster icb-web-deploy --server=https://${{ secrets.GKE_CLUSTER }}-${{ secrets.GKE_ZONE }}.cloud.google.com:443 --certificate-authority=/tmp/ca.pem
          kubectl config set-context icb-web-deploy --cluster=icb-web-deploy --user=icb-web-deploy
          kubectl config use-context icb-web-deploy
          kubectl apply -f deployment.yaml

      - name: 'Set up Ingress'
        run: |
          kubectl apply -f ingress.yaml

      - name: 'Set up Service'
        run: |
          kubectl apply -f service.yaml

